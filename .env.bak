# Required API Keys
OPENAI_API_KEY=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
ANTHROPIC_API_KEY=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

# Optional Configuration
NODE_ENV=development
PORT=3000
LOG_LEVEL=info

# MCP Server Configuration
# Sequential Thinking - Always enabled via npx
# No additional config needed

# Manim MCP - Docker-based animation generation
ENABLE_MANIM=true
MANIM_MCP_URL=http://manim-mcp:8000

# Python MCP - Docker-based Python execution
ENABLE_PYTHON=true
PYTHON_MCP_URL=http://python-mcp:8000

# Mermaid MCP - Text-to-diagram process visualizations (always available via npx)
ENABLE_MERMAID=true

# ChatMol MCP - PyMOL/ChimeraX powered molecular renders
# PyMOL installed via Homebrew - ready to use!
ENABLE_CHATMOL=true
CHATMOL_MCP_URL=http://chatmol-mcp:8000
PYMOL_PATH=/opt/homebrew/bin/pymol

# BioRender MCP - Professional life science illustration library
# Note: Uses OAuth authentication (requires user login flow)
# Remote server: https://mcp.services.biorender.com/mcp
ENABLE_BIORENDER=false
BIORENDER_MCP_URL=https://mcp.services.biorender.com/mcp
BIORENDER_OAUTH_CLIENT_ID=
BIORENDER_OAUTH_CLIENT_SECRET=

# GitHub MCP - Requires personal access token
GITHUB_TOKEN=ghp_...

# Figma MCP - Requires personal access token
FIGMA_TOKEN=figd_...
# MCP Service URLs (using correct container names)
MANIM_MCP_URL=http://mentora-manim-mcp:8000
PYTHON_MCP_URL=http://mentora-python-mcp:8000
CHATMOL_MCP_URL=http://mentora-chatmol-mcp:8000
